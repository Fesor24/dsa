Almost never used bcos of performance
Inefficient algorithm
Rarely used in the real world
In-place algorithm: uses a small amount of memory (doesn't depend on n)
The highest value will bubble to the right with each iteration

Time complexity
Best case O(n) => where the array is sorted and we optimize it by checking for swaps
Best case without optimization O(n2)
Worst case O(n2) (quadratic) => The outer loop is executed n - 1 times and the inner loop executed n - 1 times

Space complexity
O(1) => Bubble sort is in place, meaning it does not use extra space beyond the original array

Illustration
Given an array [1,4,7,9,2,0]
First iteration [1,4,7,2,0,9]
Second [1,4,2,0,7,9]
Third [1,2,0,4,7,9]
Fourth [1,0,2,4,7,9]
Fifth [0,1,2,4,7,9]
